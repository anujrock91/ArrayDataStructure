package Snippet;

public class FirstMissingPositive {
	
	public int missingPositive(int nums[]){
		int index = partition(nums);
		for(int i=0;i<index;i++){
			int curr = (nums[i]-1);
			if(curr < nums.length){
				nums[curr] = (-1*nums[curr]);
			}
		}
		for(int i=0;i<index;i++){
			if(nums[i] > 0){
				return i+1;
			}
		}
		return index;
	}
	
	public int partition(int nums[]){
		int left = 0;
		int right = (nums.length-1);
		while(left<nums.length && right>=0 && left<=right){
			while(left<nums.length && nums[left]>0){ ++left; }
			while(right>=0 && nums[right]<=0){ --right; }
			if(left <= right){
				int temp = nums[left];
				nums[left] = nums[right];
				nums[right] = temp;
				++left;
				--right;
			}
		}
		return left;
	}
	
	
	public static void main(String args[]){
		System.out.println(new FirstMissingPositive().missingPositive(new int[]{3,4,-1,1}));
	}
}
