package Snippet;
import java.util.ArrayList;

public class SumSmaller3 {
	
	public int get3SumSmaller(int [] arr){
		int count = 0;
		
		for(int i=0;i<(arr.length-2);i++){
			int a = arr[i];
			
		}
		return count;
	}
	
	public static void sort(int arr[], int left, int right){
		if(left == right){}
		else{
			int partitionIndex = partition(arr, left, right);
			if(left < partitionIndex-1){ sort(arr, left, partitionIndex-1); }
			if(right > partitionIndex ){ sort(arr, partitionIndex, right); }
		}
	}
	
	public static int partition(int arr[], int left, int right){
		int p = arr[(left+right)/2];
		while(left<=right){
			while(left<=right && arr[left] < p){ ++left; }
			while(left<=right && arr[right] > p){ --right; }
			if(left<=right){
				int temp = arr[left];
				arr[left] = arr[right];
				arr[right] = temp;
				++left;
				--right;
			}
		}
		return left;
	}
	
/*	public static void quickSort(int[] arr, int low, int high) {
		if (arr == null || arr.length == 0)
			return;
 
		if (low >= high)
			return;
 
		// pick the pivot
		int middle = low + (high - low) / 2;
		int pivot = arr[middle];
		// make left < pivot and right > pivot
		int i = low, j = high;
		while (i <= j) {
			while (arr[i] < pivot) {
				i++;
			}
 
			while (arr[j] > pivot) {
				j--;
			}
 
			if (i <= j) {
				int temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
				i++;
				j--;
			}
		}
 
		// recursively sort two sub parts
		if (low < j)
			quickSort(arr, low, j);
 
		if (high > i)
			quickSort(arr, i, high);
	}
*/	
	public static void main(String args[]){
		int arr[] = new int[]{5,2,5,1,8,4,6,7,2};
		sort(arr, 0, arr.length-1);
		for(int i: arr){
			System.out.print(i + " | ");
		}
		System.out.println();
	}
}
